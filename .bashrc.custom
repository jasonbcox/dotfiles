
readonly UNAME_LINUX="Linux"
readonly UNAME_MAC="Darwin"
readonly UNAME_WSL="Microsoft"

export VISUAL=vim
export EDITOR="$VISUAL"

function parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Only apply to interactive shells
if [[ $- == *i* ]]; then
  # Text Colors
  t_black=$(tput setaf 0)
  t_red=$(tput setaf 1)
  t_green=$(tput setaf 2)
  t_yellow=$(tput setaf 3)
  t_blue=$(tput setaf 4)
  t_purple=$(tput setaf 5)
  t_cyan=$(tput setaf 6)
  t_white=$(tput setaf 7)

  # Background Colors
  b_black=$(tput setab 0)
  b_red=$(tput setab 1)
  b_green=$(tput setab 2)
  b_yellow=$(tput setab 3)
  b_blue=$(tput setab 4)
  b_purple=$(tput setab 5)
  b_cyan=$(tput setab 6)
  b_white=$(tput setab 7)

  # Other styles
  t_bold=$(tput bold)
  t_reset=$(tput sgr0)
  t_underline=$(tput sgr 0 1)

  export PS1="\[$t_bold\]\[$t_yellow\]\u@\h\[$t_red\]\w\\[$t_green\]\$(parse_git_branch)\[$t_red\]$ \[$t_reset\]"
fi

# Linux-specific configs
if [ $(uname -s) = $UNAME_LINUX ]; then
  # Don't put duplicate lines or lines starting with space in the history
  HISTCONTROL=ignoreboth

  # LS_COLORS format is: `NAME=<ATTRIBUTE;...>:` where `...` is any combination of attributes
  # delimited by semicolons and groups of NAME=<ATTRIBUTES> is delimited by colons. Example: `di=1;4;31;42:so=32`
  # Reference: https://unix.stackexchange.com/a/94505
  # Color Reference: https://i.stack.imgur.com/S4aFQ.png

  # Styles:
  # 0  #  = default colour
  # 1  #  = bold
  # 4  #  = underlined
  # 5  #  = flashing text (disabled on some terminals)
  # 7  #  = reverse field (exchange foreground and background color)
  # 8  #  = concealed (invisible)

  # 16-bit Colors:
  # 30  # = black
  # 31  # = red
  # 32  # = green
  # 33  # = yellow
  # 34  # = blue
  # 35  # = purple
  # 36  # = cyan
  # 37  # = grey
  # 90  # = dark grey
  # 91  # = light red
  # 92  # = light green
  # 93  # = yellow
  # 94  # = light blue
  # 95  # = light purple
  # 96  # = turquoise
  # 97  # = white

  # 16-bit backgrounds:
  # 40  # = black background
  # 41  # = red background
  # 42  # = green background
  # 43  # = yellow background
  # 44  # = blue background
  # 45  # = purple background
  # 46  # = cyan background
  # 47  # = grey background
  # 100 = dark grey background
  # 101 = light red background
  # 102 = light green background
  # 103 = yellow background
  # 104 = light blue background
  # 105 = light purple background
  # 106 = turquoise background
  # 107 = white background

  # 256-bit colors/backgrounds: see color reference: https://i.stack.imgur.com/S4aFQ.png
  # 38;5; starts an xterm 256-color foreground color code
  # 48;5; starts an xterm 256-color background color code

  # Names:
  # bd = (BLOCK, BLK)  #  Block device (buffered) special file
  # cd = (CHAR, CHR)  #   # Character device (unbuffered) special file
  # di = (DIR)  # Directory
  # do = (DOOR) [Door][1]
  # ex = (EXEC) Executable file (ie. has 'x' set in permissions)
  # fi = (FILE) Normal file
  # ln = (SYMLINK, LINK, LNK)  #  Symbolic link. If you set this to ‘target’ instead of a numerical value, the color is as for the file pointed to.
  # mi = (MISSING)  # Non-existent file pointed to by a symbolic link (visible when you type ls -l)
  # no = (NORMAL, NORM) Normal (non-filename) text. Global default, although everything should be something
  # or = (ORPHAN)  #  Symbolic link pointing to an orphaned non-existent file
  # ow = (OTHER_WRITABLE)  #  Directory that is other-writable (o+w) and not sticky
  # pi = (FIFO, PIPE)  #  Named pipe (fifo file)
  # sg = (SETGID)  #  File that is setgid (g+s)
  # so = (SOCK) Socket file
  # st = (STICKY)  #  Directory with the sticky bit set (+t) and not other-writable
  # su = (SETUID)  #  File that is setuid (u+s)
  # tw = (STICKY_OTHER_WRITABLE)  #   # Directory that is sticky and other-writable (+t,o+w)
  # *.extension =  #  Every file using this extension e.g. *.rpm = files with the ending .rpm

  export LS_COLORS="$(
    echo 'di=1;94
          ex=1;92
          fi=0;33
          ln=1;35;40
          mi=1;31
          ow=1;36;40' | xargs | sed 's/[[:space:]]/:/g')"
  alias ls='ls --color=always'
  alias ll='ls -alh --color=always'
  alias lt='ls --full-time'
  alias grep='grep --color'
  alias less='less -R'

  # Resets all directories and files to default permissions recursively
  alias resetperms='find . -type d -exec chmod 775 {} \; && find . -type f -exec chmod 644 {} \;'

  # https://stackoverflow.com/a/11532197
  alias uniqunsorted='awk "!seen[\$0]++"'

  source ~/scripts/backup-helpers.sh
  source ~/scripts/debug-helpers.sh
  source ~/scripts/hash-helpers.sh
  source ~/scripts/pdf-helpers.sh

  # Prevent suspending the terminal
  stty ixany
  stty ixoff -ixon
fi

# Mac-specific configs
if [ $(uname -s) = $UNAME_MAC ]; then
  # LSCOLORS:
  # a - black
  # b - red
  # c - green
  # d - brown
  # e - blue
  # f - magenta
  # g - cyan
  # h - light grey
  # A - bold grey-black
  # B - bold red
  # C - bold green
  # D - bold yellow-brown
  # E - bold blue
  # F - bold magenta
  # G - bold cyan
  # H - bold light grey
  # x - default foreground or background

  # The order of the attributes are:
  # 1. directory
  # 2. symbolic link
  # 3. socket
  # 4. pipe
  # 5. executable
  # 6. block special
  # 7. character special
  # 8. executable with setuid bit set
  # 9. executable with setgid bit set
  # 10. directory writable to others, with sticky bit
  # 11. directory writable to others, without sticky bit

  export CLICOLOR=1
  export LSCOLORS=ExFxCxDxBxegedabagacad
  alias ls='ls -G'
fi

# Windows Subsystem for Linux specific configs
if uname -a | grep $UNAME_WSL; then
  # Export DISPLAY because WSL does not do this by default
  # Need to have an XWindow system installed such as XMing
  export DISPLAY=:0
fi

# Simple symmetric encryption aliases
alias encrypt='gpg -ac'
alias decrypt='gpg --decrypt'

# Enable programmable completion features
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Disable killing the shell with CTRL-D
IGNOREEOF=5

# virtualenvwrapper for Python development, if installed
if [ -f /usr/local/bin/virtualenvwrapper.sh ] ; then
  export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
  source /usr/local/bin/virtualenvwrapper.sh
fi

# Source optional configs, if they exist
[ -f ~/.profile_aliases ] && source ~/.profile_aliases

